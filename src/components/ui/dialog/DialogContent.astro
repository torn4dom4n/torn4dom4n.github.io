---
import { X } from "lucide-react";
import type { HTMLAttributes } from "astro/types";
import { tv } from "tailwind-variants";

type Props = HTMLAttributes<"dialog"> & {
  animationDuration?: number;
};

const dialogBackdrop = tv({
  base: [
    "dialog-backdrop fixed inset-0 z-50 hidden h-screen w-screen bg-black/80",
    "data-[state=open]:animate-in data-[state=open]:fade-in-0",
    "data-[state=closed]:animate-out data-[state=closed]:fade-out-0",
  ],
});

const dialogContent = tv({
  base: [
    "fixed top-16 left-1/2 z-50 w-full max-w-md border bg-background p-8 shadow-lg sm:rounded-lg",
    "transform -translate-x-1/2 sm:top-1/2 sm:-translate-y-1/2",
    "data-[state=open]:animate-in data-[state=closed]:animate-out",
    "data-[state=open]:fade-in-0 data-[state=open]:zoom-in-95 data-[state=open]:slide-in-from-bottom-2",
    "data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[state=closed]:slide-out-to-bottom-2",
  ],
});

const dialogCloseButton = tv({
  base: [
    "dialog-close absolute top-5 right-5 text-muted-foreground rounded-sm opacity-70 transition-opacity hover:opacity-100",
    "disabled:pointer-events-none focus-visible:outline-outline focus-visible:outline-2 focus-visible:outline-offset-2",
  ],
});

const { class: className, animationDuration = 200, ...rest } = Astro.props;
---

<div
  class={dialogBackdrop()}
  data-state="closed"
  style={`animation-duration: ${animationDuration}ms`}
  aria-hidden="true"
>
</div>

<dialog
  class={dialogContent({ class: className })}
  data-state="closed"
  {...rest}
  style={`animation-duration: ${animationDuration}ms`}
  aria-modal="true"
  role="dialog"
>
  <slot />

  <button
    type="button"
    class={dialogCloseButton()}
    data-dialog-close
    aria-label="Close dialog"
  >
    <X className="size-5" />
  </button>
</dialog>
